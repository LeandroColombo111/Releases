name: 'Release Workflow'

on:
  release:
    types: [created]  # Trigger when a new release is created

concurrency:
  group: ${{ github.event.release.id }}-release
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Generate Changelog
        id: generate_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configurationJson: |
            {
              "categories": [
                  {
                      "title": "## üöÄ New Features",
                      "pattern": "\\[DS-\\d+\\] - feat:"  
                  },
                  {
                      "title": "## üêõ Fixes",
                      "pattern": "\\[DS-\\d+\\] - fix:"  
                  },
                  {
                      "title": "## üîÑ Other Updates",
                      "pattern": "\\[DS-\\d+\\] - (chore|refactor|docs|test|ci|style):"  
                  }
              ],
              "sort": "ASC",
              "template": "${{CHANGELOG}}\n\n<details>\n<summary>Uncategorized</summary>\n\n${{UNCATEGORIZED}}\n</details>",
              "pr_template": "- ${{TITLE}}\n   - PR: #${{NUMBER}}",
              "empty_template": "- no changes",
              "max_tags_to_fetch": 200,
              "max_pull_requests": 200,
              "max_back_track_time_days": 90,
              "exclude_merge_branches": [
                  "Owner/qa"
              ]
            }

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tag-and-release:
    runs-on: ubuntu-latest
    needs: changelog  # Ensure this job runs after changelog is generated
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Latest Tag and Increment
        id: get_latest_tag
        run: |
          # Get the latest tag
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1` || echo "v0.0.0")

          # Split the tag into parts (assuming format MAJOR.MINOR.PATCH)
          IFS='.' read -r MAJOR MINOR PATCH <<< "${LATEST_TAG#v}"

          # Increment the PATCH
          PATCH=$((PATCH + 1))

          # Create the new tag
          NEW_TAG="v$MAJOR.$MINOR.$PATCH"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "NEW_TAG: $NEW_TAG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create New Tag
        run: |
          git tag ${{ env.NEW_TAG }}
          git push origin ${{ env.NEW_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: "configs/configuration_repo.json"
          ignorePreReleases: ${{ !contains(github.ref, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: mikepenz/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}  
          body: ${{ steps.build_changelog.outputs.changelog }}  
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
